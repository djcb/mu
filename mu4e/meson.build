## Copyright (C) 2022 Dirk-Jan C. Binnema <djcb@djcbsoftware.nl>
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 3 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program; if not, write to the Free Software Foundation,
## Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.


# generate some build data for use in mu4e
mu4e_meta = configure_file(
  input: 'mu4e-config.el.in',
  output: 'mu4e-config.el',
  install: true,
  install_dir: mu4e_lispdir,
  configuration: {
      'VERSION'         : meson.project_version(),
      # project_build_root() with meson >= 0.56
      'abs_top_builddir': join_paths(meson.current_build_dir()),
      'MU_DOC_DIR'      : join_paths(datadir, 'doc', 'mu'),
    })

mu4e_srcs=[
  'mu4e-actions.el',
  'mu4e-bookmarks.el',
  'mu4e-compose.el',
  'mu4e-contacts.el',
  'mu4e-context.el',
  'mu4e-contrib.el',
  'mu4e-draft.el',
  'mu4e-folders.el',
  'mu4e.el',
  'mu4e-headers.el',
  'mu4e-helpers.el',
  'mu4e-icalendar.el',
  'mu4e-lists.el',
  'mu4e-main.el',
  'mu4e-mark.el',
  'mu4e-message.el',
  'mu4e-org.el',
  'mu4e-search.el',
  'mu4e-server.el',
  'mu4e-speedbar.el',
  'mu4e-update.el',
  'mu4e-vars.el',
  'mu4e-view.el',
  'obsolete/org-mu4e.el',
]

# note, we cannot compile mu4e-config.el without incurring
#  WARNING: Source item
#   '[...]/build/mu4e/mu4e-meta.el' cannot be converted to File object, because
#   it is a generated file. This will become a hard error in the future.
#
#... so let's not do that!

# hack-around for native compile issue: copy sources to builddir.
# see: https://debbugs.gnu.org/db/47/47987.html
foreach src : mu4e_srcs
  configure_file(input: src, output:'@BASENAME@.el', copy:true)
endforeach

foreach src : mu4e_srcs
  target_name= '@BASENAME@.elc'
  target_path = join_paths(meson.current_build_dir(), target_name)
  target_func = '(setq byte-compile-dest-file-function(lambda(_) "' + target_path + '"))'

  custom_target(src.underscorify() + '_el',
                build_by_default: true,
                input: src,
                output: target_name,
                install_dir: mu4e_lispdir,
                install: true,
                command: [emacs,
                          '--no-init-file',
                          '--batch',
                          '--eval', '(setq load-prefer-newer t)',
                          '--eval', target_func,
                          '--directory', meson.current_build_dir(),
                          '--directory', meson.current_source_dir(),
                          '--funcall', 'batch-byte-compile', '@INPUT@'])
endforeach

target_name = 'mu4e-autoloads.el'
target_path = join_paths(meson.current_build_dir(), target_name)
target_var = '(setq generated-autoload-file "' + target_path + '")'

custom_target('mu4e_autoloads_el',
              build_by_default: true,
              input: src,
              output: target_name,
              install_dir: mu4e_lispdir,
              install: true,
              command: [emacs,
                        '--no-init-file',
                        '--batch',
                        '--eval', target_var,
                        '--funcall', 'batch-update-autoloads',
                        meson.current_source_dir()])

# also install the sources and the config
install_data(mu4e_srcs, install_dir: mu4e_lispdir)

# install mu4e-about.org
install_data('mu4e-about.org', install_dir : join_paths(datadir, 'doc', 'mu'))

if makeinfo.found()

  fulldate = run_command('date', '+%d %B %Y', check:true).stdout().strip()
  monthdate = run_command('date', '+%B %Y', check:true).stdout().strip()
  version_texi_data = configuration_data({
    'fulldate'  : fulldate,
    'monthdate' : monthdate,
    'version'   : meson.project_version(),
  })
  version_texi = configure_file(
    input:  'version.texi.in',
    output: 'version.texi',
    configuration: version_texi_data)

  custom_target('mu4e_info',
                input: 'mu4e.texi',
                output: 'mu4e.info',
                install_dir: infodir,
                install: true,
                command: [makeinfo,
                          '-o', join_paths(meson.current_build_dir(), 'mu4e.info'),
                          join_paths(meson.current_source_dir(), 'mu4e.texi'),
                          '-I', join_paths(meson.current_build_dir(), '..')])
  if install_info.found()
    meson.add_install_script(install_info_script, 'share/info', 'mu4e.info')
  endif
endif
